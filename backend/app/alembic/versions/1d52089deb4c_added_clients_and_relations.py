"""Added clients And relations

Revision ID: 1d52089deb4c
Revises: e2412789c190
Create Date: 2024-04-23 08:56:01.679585

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes

# revision identifiers, used by Alembic.
revision = '1d52089deb4c'
down_revision = 'e2412789c190'
branch_labels = None
depends_on = None


def upgrade():
    # Create the clients table
    op.execute("""
    CREATE TABLE clients
    (
        id                   SERIAL PRIMARY KEY,
        name                 TEXT                           NOT NULL,
        nickname             TEXT                           NOT NULL,
        instagram            TEXT,
        "openForConnections" SMALLINT DEFAULT '0'::smallint CONSTRAINT clients_openforconnections_check CHECK ("openForConnections" = ANY (ARRAY [0, 1, 2])),
        priority             SMALLINT DEFAULT 0             NOT NULL,
        "isReached"          SMALLINT DEFAULT '0'::smallint NOT NULL CONSTRAINT clients_isreached_check CHECK ("isReached" = ANY (ARRAY [0, 1])),
        status               SMALLINT DEFAULT 1             NOT NULL CONSTRAINT clients_status_check CHECK (status = ANY (ARRAY [0, 1])),
        "userId"             TEXT                           NOT NULL CONSTRAINT unique_userid UNIQUE,
        "howHardToReach"     SMALLINT                       NOT NULL,
        "hasEyesAndHair"     SMALLINT,
        city                 TEXT,
        "relationType"       TEXT
    );

    ALTER TABLE clients OWNER TO postgres;
    """)

    # Create the relations table
    op.execute("""
    CREATE TABLE relations
    (
        id             SERIAL PRIMARY KEY,
        "fromClientId" TEXT NOT NULL REFERENCES clients ("userId") ON DELETE CASCADE,
        "toClientId"   TEXT NOT NULL REFERENCES clients ("userId") ON DELETE CASCADE,
        status         SMALLINT DEFAULT 1 NOT NULL CONSTRAINT relations_status_check CHECK (status = ANY (ARRAY [0, 1]))
    );

    ALTER TABLE relations OWNER TO postgres;
    """)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if 'relations' table exists before dropping it
    if op.get_bind().engine.dialect.has_table(op.get_bind(), 'relations'):
        op.drop_table('relations')

    # Check if 'clients' table exists before dropping it
    if op.get_bind().engine.dialect.has_table(op.get_bind(), 'clients'):
        op.drop_table('clients')
    # ### end Alembic commands ###
